// generated by @greymass/abi2core

import {Float64, Int64, Name, Struct, UInt128, UInt64} from '@greymass/eosio'

@Struct.type('createfee')
export class Createfee extends Struct {
    @Struct.field('string') end_point!: string
    @Struct.field(Int64) type!: Int64
    @Struct.field(Int64) suf_amount!: Int64
}

@Struct.type('feevalue')
export class Feevalue extends Struct {
    @Struct.field('string') end_point!: string
    @Struct.field(Int64) value!: Int64
}

@Struct.type('feevalue_ts')
export class FeevalueTs extends Struct {
    @Struct.field('string') end_point!: string
    @Struct.field(Int64) value!: Int64
    @Struct.field(UInt64) timestamp!: UInt64
}

@Struct.type('setfeevote')
export class Setfeevote extends Struct {
    @Struct.field(Feevalue, {array: true}) fee_ratios!: Feevalue[]
    @Struct.field(Int64) max_fee!: Int64
    @Struct.field(Name) actor!: Name
}

@Struct.type('bundlevote')
export class Bundlevote extends Struct {
    @Struct.field(Int64) bundled_transactions!: Int64
    @Struct.field(Int64) max_fee!: Int64
    @Struct.field(Name) actor!: Name
}

@Struct.type('setfeemult')
export class Setfeemult extends Struct {
    @Struct.field(Float64) multiplier!: Float64
    @Struct.field(Int64) max_fee!: Int64
    @Struct.field(Name) actor!: Name
}

@Struct.type('mandatoryfee')
export class Mandatoryfee extends Struct {
    @Struct.field('string') end_point!: string
    @Struct.field(Name) account!: Name
    @Struct.field(Int64) max_fee!: Int64
}

@Struct.type('bytemandfee')
export class Bytemandfee extends Struct {
    @Struct.field('string') end_point!: string
    @Struct.field(Name) account!: Name
    @Struct.field(Int64) max_fee!: Int64
    @Struct.field(Int64) bytesize!: Int64
}

@Struct.type('computefees')
export class Computefees extends Struct {}

@Struct.type('fiofee')
export class Fiofee extends Struct {
    @Struct.field(UInt64) fee_id!: UInt64
    @Struct.field('string') end_point!: string
    @Struct.field(UInt128) end_point_hash!: UInt128
    @Struct.field(UInt64) type!: UInt64
    @Struct.field(UInt64) suf_amount!: UInt64
    @Struct.field('bool$') votes_pending!: boolean
}

@Struct.type('feevoter')
export class Feevoter extends Struct {
    @Struct.field(Name) block_producer_name!: Name
    @Struct.field(Float64) fee_multiplier!: Float64
    @Struct.field(UInt64) lastvotetimestamp!: UInt64
}

@Struct.type('feevote')
export class Feevote extends Struct {
    @Struct.field(UInt64) id!: UInt64
    @Struct.field(Name) block_producer_name!: Name
    @Struct.field('string') end_point!: string
    @Struct.field(UInt128) end_point_hash!: UInt128
    @Struct.field(UInt64) suf_amount!: UInt64
    @Struct.field(UInt64) lastvotetimestamp!: UInt64
}

@Struct.type('feevote2')
export class Feevote2 extends Struct {
    @Struct.field(UInt64) id!: UInt64
    @Struct.field(Name) block_producer_name!: Name
    @Struct.field(FeevalueTs, {array: true}) feevotes!: FeevalueTs[]
    @Struct.field(UInt64) lastvotetimestamp!: UInt64
}

@Struct.type('bundlevoter')
export class Bundlevoter extends Struct {
    @Struct.field(Name) block_producer_name!: Name
    @Struct.field(UInt64) bundledbvotenumber!: UInt64
    @Struct.field(UInt64) lastvotetimestamp!: UInt64
}
